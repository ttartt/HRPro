@using HRProContracts.ViewModels
@model CompanyViewModel

@{
    var title = @Model.Id <= 0 ? "Создать профиль компании" : "Редактировать профиль компании";
}

<div class="container">
    <h1>@title</h1>
    <form method="post" class="row g-3 needs-validation" novalidate>
        <input type="hidden" name="id" value="@Model?.Id" />

        <div class="col-md-6">
            <label for="name" class="form-label">Название <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="name" name="name" value="@Model?.Name" required placeholder="Введите название компании">
            <div class="invalid-feedback">Пожалуйста, введите название компании.</div>
        </div>

        <div class="col-md-6">
            <label for="description" class="form-label">Описание</label>
            <textarea class="form-control" id="description" name="description" rows="3" placeholder="Введите описание компании">@Model?.Description</textarea>
        </div>

        <div class="col-md-6">
            <label for="website" class="form-label">Официальный сайт</label>
            <input type="url" class="form-control" id="website" name="website" value="@Model?.Website" placeholder="Введите URL сайта">
            <div class="invalid-feedback">Пожалуйста, введите валидный URL (например, https://example.com).</div>
        </div>

        <div class="col-md-6">
            <label for="address" class="form-label">Адрес</label>
            <input type="text" class="form-control" id="address" name="address" value="@Model?.Address" placeholder="Введите адрес компании">
        </div>

        <div class="col-12">
            <label for="contacts" class="form-label">Контакты</label>
            <textarea class="form-control" id="contacts" name="contacts" rows="3" placeholder="Введите контактную информацию">@Model?.Contacts</textarea>
        </div>

        <div class="d-flex justify-content-between">
            <button type="submit" class="btn btn-primary">Сохранить</button>
            @if (Model.Id > 0)
            {
                 <a asp-controller="Company" asp-action="CompanyProfile" class="btn btn-secondary">Отмена</a>
            }        
        </div>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form.needs-validation");

        form.addEventListener("submit", function (event) {
            event.preventDefault();

            const formData = new FormData(form);

            fetch(form.action, {
                method: "POST",
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Ошибка сети или сервера");
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        window.location.href = data.redirectUrl;
                    } else {
                        showToast(data.message, "danger");
                    }
                })
                .catch(error => {
                    showToast("Произошла ошибка при обработке запроса: " + error.message, "danger");
                });
        });
    });

    function showToast(message, type = "success") {
        let toastContainer = document.querySelector(".toast-container");
        if (!toastContainer) {
            toastContainer = document.createElement("div");
            toastContainer.className = "toast-container position-fixed top-0 end-0 p-3";
            document.body.appendChild(toastContainer);
        }

        const toast = document.createElement("div");
        toast.className = `toast show align-items-center text-white bg-${type} border-0`;
        toast.setAttribute("role", "alert");
        toast.setAttribute("aria-live", "assertive");
        toast.setAttribute("aria-atomic", "true");

        toast.innerHTML = `
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Закрыть"></button>
                        </div>
                    `;

        toast.querySelector("button").addEventListener("click", () => toast.remove());
        toastContainer.appendChild(toast);

        setTimeout(() => toast.remove(), 5000);
    }
</script>
<style>
    .btn {
        background-color: #3E12E3;
        color: white;
        border: none;
        border-radius: 10px;
        padding: 12px;
        font-size: 16px;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn:hover {
        background-color: #2200A4;
        transform: scale(1.05);
    }
</style>

